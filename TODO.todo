# ./venv/bin/python sockjs-protocol-0.1.py BaseUrlGreeting IframePage ChunkingTest SessionURLs Protocol ProtocolQuirks WebsocketHttpErrors WebsocketHixie76 WebsocketHybi10

SockJS 0.1 Protocol Tests:
  ✓ BaseUrlGreeting
  ✓ IframePage
  ✓ ChunkingTest
  ✓ SessionURLs
  - Protocol:
    - test_simpleSession: Fail if there's more than one open connection to given session. At the moment there's no infrastructure for this in place, we don't keep the status. See transport.coffee of sockjs-node.
    ✓ test_closeSession
  ✓ XhrPolling:
    ✓ test_transport: Fails only due to mess in text/plain vs. text/plain; charset=UTF-8 (check https://github.com/sockjs/sockjs-protocol/issues/21).
  ✓ XhrStreaming
  ✓ EventSource
  ✓ HtmlFile
  ✓ JsonPolling
  - ProtocolQuirks:
    - test_closeSession_another_connection: Fail if there's more than one open connection to given session. At the moment there's no infrastructure for this in place, we don't keep the status. See transport.coffee of sockjs-node.

  - WebsocketHttpErrors:
    - test_invalidMethod
  - WebsocketHixie76:
    - test_transport
    - test_close
    - test_empty_frame
    - test_reuseSessionId
    - test_headersSanity
    - test_broken_json
  - WebsocketHybi10:
    - test_transport
    - test_close
    - test_headersSanity
    - test_broken_json
    - test_firefox_602_connection_header

Implementation:
  ✓ It might be a good idea to make it really agnostic and make Rack just an adapter. Use Node.js-like HttpResponse object.
  ✓ Apparently we can't make Thin respond in HTTP/1.0. In order to support chunking, we therefore need to implement something like Rack::Chunking::Body   https://github.com/rack/rack/blob/master/lib/rack/chunked.rb#L11 We can't use the class straight away, because it's synchronous and it doesn't play well with EventMachine. Bloody hell!
  - Support polling with HTTP 1.0 (see https://github.com/rack/rack/blob/master/lib/rack/chunked.rb#L44-53)
  - curl -X POST http://localhost:8080/echo/a/b/xhr -vv should return o frame, the next curl -X POST http://localhost:8080/echo/a/b/xhr -vv should hang and return a message if there's any or heartbeat after the timeout (see disconnect_delay in sockjs-node).
  - If there's another request during the closing 5s, we are supposed to reply with another closing frame and reset the timer to wait for another 5s.

Protocol:
  - Heartbeat
