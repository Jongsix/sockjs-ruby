h1. About

_*Disclaimer:* This library is still work in progress. Currently only Rack adapter is supported, more adapters shall follow in the future._

SockJS is WebSocket emulation library. It means that you use the WebSocket API, only instead of @WebSocket@ class you instantiate @SockJS@ class. I highly recommend to read "SockJS: WebSocket emulation":http://www.rabbitmq.com/blog/2011/09/13/sockjs-websocket-emulation on the RabbitMQ blog for more info.

h2. The Client-Side Part

For the client-side part you need to use JS library "sockjs-client":http://sockjs.github.com/sockjs-client which provides WebSocket-like API. Here's an example:

<pre>
<script src="http://cdn.sockjs.org/sockjs-0.1.min.js"></script>

<script>
  var sock = new SockJS("http://mydomain.com/my_prefix");

  sock.onopen = function() {
    console.log("open");
  };

  sock.onmessage = function(e) {
    console.log("message", e.data);
  };

  sock.onclose = function() {
    console.log("close");
  };
</script>
</pre>

h2. The Server-Side Part

Now in order to have someone to talk to, we need to run a server and that's exactly what is sockjs-ruby good for. Here's an example how the API looks like:

<pre>
#!/usr/bin/env rackup -s thin
# encoding: utf-8

require "rack/sockjs"

use SockJS, "/echo" do |connection|
  connection.subscribe do |session, message|
    session.send(message)
  end
end

use SockJS, "/disabled_websocket_echo",
  disabled_transports: [SockJS::WebSocket] do |connection|
  # ...
end

use SockJS, "/close" do |connection|
  connection.session_open do |session|
    session.close(3000, "Go away!")
  end
end

run MyApp
</pre>

For more complex example check "examples/app/config.ru":https://github.com/sockjs/sockjs-ruby/blob/master/examples/app/config.ru.

h2. SockJS Family

* "SockJS-client":https://github.com/sockjs/sockjs-client JavaScript client library.
* "SockJS-node":https://github.com/sockjs/sockjs-node Node.js server.
* "SockJS-ruby":https://github.com/sockjs/sockjs-ruby Ruby server.
* "SockJS-protocol":https://github.com/sockjs/sockjs-protocol protocol documentation.

h1. Links

* "SockJS: WebSocket emulation":http://www.rabbitmq.com/blog/2011/09/13/sockjs-websocket-emulation
* "SockJS: web messaging ain't easy":http://www.rabbitmq.com/blog/2011/08/22/sockjs-web-messaging-aint-easy
* "PubSubHuddle Realtime Web talk":http://www.rabbitmq.com/blog/2011/09/26/pubsubhuddle-realtime-web-talk
